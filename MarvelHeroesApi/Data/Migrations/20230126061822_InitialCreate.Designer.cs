// <auto-generated />
using System;
using MarvelHeroesApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarvelHeroesApi.Data.Migrations
{
    [DbContext(typeof(MarvelHeroesDbContext))]
    [Migration("20230126061822_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarvelHeroesApi.Data.Entities.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FirstAppearance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeroName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecretIdentity")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("MarvelHeroesApi.Data.Entities.HeroPower", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<int>("PowerId")
                        .HasColumnType("integer");

                    b.HasKey("HeroId", "PowerId");

                    b.HasIndex("PowerId");

                    b.ToTable("HeroPowers");
                });

            modelBuilder.Entity("MarvelHeroesApi.Data.Entities.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Powers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The ability to lift and move objects that are far beyond the normal physical limits of the human body.",
                            Name = "Super Strength"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The ability to move at speeds greater than the normal physical limits of the human body.",
                            Name = "Super Speed"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The ability to exert oneself physically for long periods of time without tiring.",
                            Name = "Super Stamina"
                        });
                });

            modelBuilder.Entity("MarvelHeroesApi.Data.Entities.HeroPower", b =>
                {
                    b.HasOne("MarvelHeroesApi.Data.Entities.Hero", "Hero")
                        .WithMany("HeroPowers")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelHeroesApi.Data.Entities.Power", "Power")
                        .WithMany("HeroPowers")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("Power");
                });

            modelBuilder.Entity("MarvelHeroesApi.Data.Entities.Hero", b =>
                {
                    b.Navigation("HeroPowers");
                });

            modelBuilder.Entity("MarvelHeroesApi.Data.Entities.Power", b =>
                {
                    b.Navigation("HeroPowers");
                });
#pragma warning restore 612, 618
        }
    }
}
